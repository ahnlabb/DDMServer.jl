name: Systems compiler 
on:
  pull_request:
    branches:
      - 'master'
      - 'release-*'
  push:
    branches:
      - 'master'
      - 'release-*'
      - 'oa/actions'
    tags: '*'
concurrency:
  group: ${{ github.head_ref || github.ref_name || github.run_id }} 
  cancel-in-progress: true
jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: false
  test:
    needs: create_release
    permissions: write-all
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        julia-version:
          - '1.8'
        julia_arch:
          - 'x64'
          - 'x86'
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        exclude:
          - os: macOS-latest
            julia-arch: x86
        include:
          - os: ubuntu-latest
            release_prefix: ubuntu
          - os: macos-latest
            release_prefix: mac
          - os: windows-latest
            release_prefix: windows
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.julia-version }}
      - uses: julia-actions/add-julia-registry@v1
        with:
          key: ${{ secrets.SSH_KEY }}
          registry: nordenfeltLab/NordenfeltLabRegistry
      - name: ls -a
        run: ls -a
      - name: Pkg.instantiate()
        run: julia --project=. -e 'using Pkg; Pkg.instantiate()'
      - name: Pkg.add("PyCall")
        run: julia --project=. -e 'using Pkg; Pkg.add("PyCall")'
      - name: Pkg.add("PackageCompiler")
        run: julia --project=. -e 'using Pkg; Pkg.add("PackageCompiler")'
      - name: Permission to compile 
        run: chmod +x ./compile.sh 
      - name: Compile using ./compile.sh
        run: ./compile.sh 
      - name: zip package
        run: zip -r ${{ matrix.release_prefix }}_${{ matrix.julia_arch }}.zip compiled
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.create_release.outputs.tag-name }}
          files: ${{ matrix.release_prefix }}_${{ matrix.julia_arch }}.zip
